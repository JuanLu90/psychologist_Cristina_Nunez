---
import ArrowDown from "../icons/arrow-down.astro";
const FORMSPREE_URL = import.meta.env.FORMSPREE_URL;
---

<div class="w-full max-w-sm m-auto py-6">
  <h2 class="my-5 text-xl font-bold">Formulario de contacto</h2>
  <form id="myForm" action={FORMSPREE_URL} method="POST">
    <input id="name" name="name" type="text" placeholder="Nombre" required />
    <input
      id="surnames"
      name="surnames"
      type="text"
      placeholder="Apellidos"
      class="focus:outline-none focus:shadow-outline"
      required
    />
    <input
      id="email"
      type="text"
      name="email"
      placeholder="Correo electrónico"
      required
    />
    <input
      id="phone"
      type="text"
      name="phone"
      placeholder="Teléfono"
      required
    />
    <textarea
      id="reason"
      name="reason"
      rows="4"
      placeholder="Motivo de consulta"></textarea>
    <textarea
      id="availability"
      name="availability"
      rows="2"
      placeholder="Disponibilidad horaria"></textarea>

    <h2
      id="toggle-title"
      class="text-xl font-bold text-blueMedium cursor-pointer flex"
    >
      INFORMACIÓN LEGAL {(<ArrowDown color="text-blueMedium" />)}
    </h2>
    <div class="mt-4 hidden overflow-hidden transition-height" id="contenido">
      <p>
        Se le informa que los datos personales de contacto facilitados por usted
        en el presente formulario serán objeto de tratamiento por CRISTINA NÚÑEZ
        PARRA como responsable del tratamiento, para la finalidad de atender su
        solicitud manifestada en el mismo y cuya legitimación proviene del
        interés legítimo que poseemos para responder a las consultas, peticiones
        o solicitudes de los usuarios de la web.
      </p>
      <br />
      <p>
        Estos datos de contacto sólo serán utilizados para responderle a su
        solicitud y serán eliminados a la conclusión de la petición realizada
        por usted. No se cederán ni comunicarán a terceros salvo exigencia
        legal. Al pulsar el botón ENVIAR, está reconociendo que ha sido
        informado sobre el uso que daremos a estos datos personales.
      </p>
    </div>

    <div class="flex items-center justify-between mt-3">
      <button
        class="text-gray-50 bg-brownDark hover:bg-brownMedium border-b-4 border-brownMedium font-bold py-3 px-5 focus:outline-none focus:shadow-outline w-full lg:w-auto"
        type="submit"
      >
        Enviar
      </button>
    </div>
    <div class="mt-5 p-4 bg-green-200 hidden" id="wrapperStatusForm">
      <p id="statusForm"></p>
    </div>
  </form>
</div>

<style>
  form input[type="text"],
  textarea {
    @apply mb-4 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight;
  }

  form input[type="text"]:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5); /* Replace with your desired shadow */
  }

  .transition-height {
    max-height: 0;
    overflow: hidden;
    transition-property: max-height;
    transition-duration: 0.5s; /* Adjust the duration as needed */
  }
</style>

<script>
  const myForm = document.getElementById("myForm");
  const statusElement = document.getElementById("statusForm");
  const wrapperStatusElement = document.getElementById("wrapperStatusForm");

  document.addEventListener("DOMContentLoaded", function () {
    const titleElement = document.getElementById("toggle-title");

    if (titleElement) {
      titleElement.addEventListener("click", function () {
        const content = document.getElementById("contenido");
        if (content) {
          content.classList.toggle("hidden");
          if (content.classList.contains("hidden")) {
            content.style.maxHeight = "0";
          } else {
            content.style.maxHeight = content.scrollHeight + "px";
          }
        }
      });
    }
  });

  function handleResponse(
    xhr: XMLHttpRequest,
    form: HTMLFormElement,
    statusElement: HTMLElement,
    wrapperStatusElement: HTMLElement
  ) {
    if (xhr.readyState !== XMLHttpRequest.DONE) return;
    if (xhr.status === 200) {
      form.reset();
      statusElement.textContent =
        "Gracias por tu solicitud. Me pondré en contacto contigo lo antes posible.";
    } else {
      statusElement.textContent =
        "Ha habido un error al enviar el formulario. Por favor, inténtalo de nuevo.";
    }
    wrapperStatusElement.classList.remove("hidden");
  }

  if (myForm) {
    myForm.addEventListener("submit", function (event) {
      event.preventDefault();
      const form = event.target as HTMLFormElement;
      const data = new FormData(form);
      console.log("data", data);
      const xhr = new XMLHttpRequest();
      console.log("xhr", xhr);
      xhr.open(form.method, form.action);
      xhr.setRequestHeader("Accept", "application/json");
      xhr.onreadystatechange = () =>
        handleResponse(xhr, form, statusElement!, wrapperStatusElement!);
      xhr.send(data);
    });
  }
</script>
